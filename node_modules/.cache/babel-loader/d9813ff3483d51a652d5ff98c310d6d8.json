{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/carec/Desktop/playing/React/social-card/src/index.js\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport { getData } from './services';\n/*\nservices - components vs services\n            used for business logic aspects including fetching/getting data from outside sources to decouple\n            UI logic from APIs (so any API change does not affect your component structure)\n\n            myApp initialization - get twitter data function\n*/\n\nfunction MyApp() {\n  let arr = getData();\n  return /*#__PURE__*/React.createElement(Deck, {\n    props: arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Deck({\n  props\n}) {\n  /*original was an implicit return*/\n  return props.map((prop\n  /*parentheses with multiple*/\n  ) => {\n    return /*#__PURE__*/React.createElement(SocialCard, {\n      props: prop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    });\n  }); // /* alternative - return the map array as JSX to react\n  //\n  // let socialCards = props.map(prop => {\n  //     let obj = {\n  //\n  //     }\n  //     return <SocialCard props={prop}>\n  // });\n  //\n  // return socialCards;\n  // */\n}\n/* prop types/typescript\n avoid verbose names with API data - if the data ever changes you would need to change the variable name, decouple from API so you can reuse components*/\n\n\nfunction SocialCard({\n  props\n}) {\n  let spanStyle = {\n    color: 'black',\n    fontWeight: 'bold'\n  };\n  /*shouldn't have a mapping in the social card, should put mapping in the deck level and pass it as props to the social card*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: prop.info.profile_banner_url,\n    className: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: prop.info.profile_image_url,\n    className: \"pro-pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), prop.info.verified && /*#__PURE__*/React.createElement(\"img\", {\n    className: \"verified\",\n    src: 'https://upload.wikimedia.org/wikipedia/commons/e/e4/Twitter_Verified_Badge.svg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"follow-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Follow\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, prop.info.name), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"screen-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"@\", prop.info.screen_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, prop.info.description), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon\",\n    src: require('./images/location-icon.svg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), prop.info.location, \" \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon\",\n    src: require('./images/url-icon.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: prop.info.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 80\n    }\n  }, prop.info.url), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon\",\n    src: require('./images/bday-icon.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), \"Born date \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon\",\n    src: require('./images/calendar-icon.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), \"Joined \", prop.date, \" \\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"info-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: spanStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }, prop.following), \" Following \", /*#__PURE__*/React.createElement(\"span\", {\n    style: spanStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 105\n    }\n  }, prop.followers), \" Followers\"));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(MyApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/mnt/c/Users/carec/Desktop/playing/React/social-card/src/index.js"],"names":["React","ReactDOM","getData","MyApp","arr","Deck","props","map","prop","SocialCard","spanStyle","color","fontWeight","info","profile_banner_url","profile_image_url","verified","name","screen_name","description","require","location","url","date","following","followers","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport {getData} from './services';\n\n\n/*\nservices - components vs services\n            used for business logic aspects including fetching/getting data from outside sources to decouple\n            UI logic from APIs (so any API change does not affect your component structure)\n\n            myApp initialization - get twitter data function\n*/\n\nfunction MyApp() {\n    let arr = getData();\n    return (\n        <Deck props={arr} />\n    );\n}\n\n\nfunction Deck({ props }) {\n    /*original was an implicit return*/\n    return props.map(prop /*parentheses with multiple*/ => {\n        return (<SocialCard props={prop}/>);\n    });\n\n    // /* alternative - return the map array as JSX to react\n    //\n    // let socialCards = props.map(prop => {\n    //     let obj = {\n    //\n    //     }\n    //     return <SocialCard props={prop}>\n    // });\n    //\n    // return socialCards;\n    // */\n}\n\n\n/* prop types/typescript\n avoid verbose names with API data - if the data ever changes you would need to change the variable name, decouple from API so you can reuse components*/\n\nfunction SocialCard({ props }) {\n    let spanStyle = {\n        color: 'black',\n        fontWeight: 'bold'\n    }\n    /*shouldn't have a mapping in the social card, should put mapping in the deck level and pass it as props to the social card*/\n    return (\n        <div className=\"card\">\n            <img src={prop.info.profile_banner_url} className=\"banner\" />\n            <img src={prop.info.profile_image_url} className=\"pro-pic\" />\n            {prop.info.verified &&\n                <img className=\"verified\" src={'https://upload.wikimedia.org/wikipedia/commons/e/e4/Twitter_Verified_Badge.svg'} />\n            }\n            <button className=\"follow-button\">Follow</button>\n            <h1 className=\"name\">{prop.info.name}</h1>\n            <h2 className=\"screen-name\">@{prop.info.screen_name}</h2>\n            <p className=\"description\">{prop.info.description}</p>\n            <p className=\"info-description\">\n                <img className=\"icon\" src={require('./images/location-icon.svg')} />{prop.info.location} &nbsp;&nbsp;\n                <img className=\"icon\" src={require('./images/url-icon.png')} /><a href={prop.info.url}>{prop.info.url}</a>&nbsp;&nbsp;\n                <img className=\"icon\" src={require('./images/bday-icon.png')} />Born date &nbsp;&nbsp;\n                <img className=\"icon\" src={require('./images/calendar-icon.png')} />Joined {prop.date} &nbsp;&nbsp;\n            </p>\n            <p className=\"info-description\"><span style={ spanStyle }>{prop.following}</span> Following <span style={ spanStyle }>{prop.followers}</span> Followers</p>\n        </div>\n    );\n}\n\n\n\nReactDOM.render(\n    <MyApp />,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}