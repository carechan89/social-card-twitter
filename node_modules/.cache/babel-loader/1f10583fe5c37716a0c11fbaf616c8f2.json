{"ast":null,"code":"/*typically a folder*/\nconst myUsernames = ['username-accenture_us.json', 'username-cristiano.json', 'username-rihanna.json', 'username-twitterdev.json'];\nexport function getData() {\n  let arr = [];\n\n  for (let i = 0; i < myUsernames.length; ++i) {\n    let path = myUsernames[i];\n\n    let data = require(\"./\" + path);\n\n    let joined_date = Date.parse(data.created_at);\n    let joined_date_object = new Date(joined_date);\n    let joined_year = joined_date_object.getFullYear();\n    let joined_month = joined_date_object.toLocaleString('default', {\n      month: 'long'\n    });\n    let joined_date_string = joined_month + ' ' + joined_year;\n    let num_following = NumberFormatter(data.friends_count);\n    let num_followers = NumberFormatter(data.followers_count);\n    let obj = {\n      date: joined_date_string,\n      info: data,\n      following: num_following,\n      followers: num_followers\n    };\n    arr.push(obj);\n  }\n\n  return arr;\n}\n\nfunction NumberFormatter(num) {\n  if (num > 999 && num < 1000000) {\n    return (num / 1000).toFixed(1) + 'K';\n  } else if (num > 1000000) {\n    return (num / 1000000).toFixed(1) + 'M';\n  }\n\n  return num;\n}","map":{"version":3,"sources":["/mnt/c/Users/carec/Desktop/playing/React/social-card/src/services.js"],"names":["myUsernames","getData","arr","i","length","path","data","require","joined_date","Date","parse","created_at","joined_date_object","joined_year","getFullYear","joined_month","toLocaleString","month","joined_date_string","num_following","NumberFormatter","friends_count","num_followers","followers_count","obj","date","info","following","followers","push","num","toFixed"],"mappings":"AAAA;AAEA,MAAMA,WAAW,GAAG,CAAC,4BAAD,EAA+B,yBAA/B,EACC,uBADD,EAC0B,0BAD1B,CAApB;AAGA,OAAO,SAASC,OAAT,GAAmB;AACtB,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,WAAW,CAACI,MAA9B,EAAsC,EAAED,CAAxC,EAA2C;AACvC,QAAIE,IAAI,GAAGL,WAAW,CAACG,CAAD,CAAtB;;AACA,QAAIG,IAAI,GAAGC,OAAO,CAAC,OAAOF,IAAR,CAAlB;;AAEA,QAAIG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,UAAhB,CAAlB;AACA,QAAIC,kBAAkB,GAAG,IAAIH,IAAJ,CAASD,WAAT,CAAzB;AACA,QAAIK,WAAW,GAAGD,kBAAkB,CAACE,WAAnB,EAAlB;AACA,QAAIC,YAAY,GAAGH,kBAAkB,CAACI,cAAnB,CAAkC,SAAlC,EAA6C;AAACC,MAAAA,KAAK,EAAE;AAAR,KAA7C,CAAnB;AACA,QAAIC,kBAAkB,GAAGH,YAAY,GAAG,GAAf,GAAqBF,WAA9C;AAEA,QAAIM,aAAa,GAAGC,eAAe,CAACd,IAAI,CAACe,aAAN,CAAnC;AACA,QAAIC,aAAa,GAAGF,eAAe,CAACd,IAAI,CAACiB,eAAN,CAAnC;AAEA,QAAIC,GAAG,GAAG;AACNC,MAAAA,IAAI,EAAEP,kBADA;AAENQ,MAAAA,IAAI,EAAEpB,IAFA;AAGNqB,MAAAA,SAAS,EAAER,aAHL;AAINS,MAAAA,SAAS,EAAEN;AAJL,KAAV;AAMApB,IAAAA,GAAG,CAAC2B,IAAJ,CAASL,GAAT;AACH;;AAED,SAAOtB,GAAP;AACH;;AAED,SAASkB,eAAT,CAAyBU,GAAzB,EAA8B;AAC1B,MAAIA,GAAG,GAAG,GAAN,IAAaA,GAAG,GAAG,OAAvB,EAAgC;AAC5B,WAAO,CAACA,GAAG,GAAC,IAAL,EAAWC,OAAX,CAAmB,CAAnB,IAAwB,GAA/B;AACH,GAFD,MAEO,IAAID,GAAG,GAAG,OAAV,EAAmB;AACtB,WAAO,CAACA,GAAG,GAAC,OAAL,EAAcC,OAAd,CAAsB,CAAtB,IAA2B,GAAlC;AACH;;AACD,SAAOD,GAAP;AACH","sourcesContent":["/*typically a folder*/\r\n\r\nconst myUsernames = ['username-accenture_us.json', 'username-cristiano.json',\r\n                     'username-rihanna.json', 'username-twitterdev.json'];\r\n\r\nexport function getData() {\r\n    let arr = [];\r\n\r\n    for (let i=0; i < myUsernames.length; ++i) {\r\n        let path = myUsernames[i];\r\n        let data = require(\"./\" + path);\r\n\r\n        let joined_date = Date.parse(data.created_at);\r\n        let joined_date_object = new Date(joined_date);\r\n        let joined_year = joined_date_object.getFullYear();\r\n        let joined_month = joined_date_object.toLocaleString('default', {month: 'long'});\r\n        let joined_date_string = joined_month + ' ' + joined_year;\r\n\r\n        let num_following = NumberFormatter(data.friends_count);\r\n        let num_followers = NumberFormatter(data.followers_count);\r\n\r\n        let obj = {\r\n            date: joined_date_string,\r\n            info: data,\r\n            following: num_following,\r\n            followers: num_followers\r\n        };\r\n        arr.push(obj);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction NumberFormatter(num) {\r\n    if (num > 999 && num < 1000000) {\r\n        return (num/1000).toFixed(1) + 'K';\r\n    } else if (num > 1000000) {\r\n        return (num/1000000).toFixed(1) + 'M';\r\n    }\r\n    return num;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}